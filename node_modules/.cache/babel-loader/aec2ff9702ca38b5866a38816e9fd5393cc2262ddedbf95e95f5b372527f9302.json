{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chen\\\\Desktop\\\\\\u65B0\\u5EFA\\u6587\\u4EF6\\u5939\\\\frontend\\\\src\\\\Pages\\\\inventory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport InventoryList from './components/InventoryList';\nimport './App.css';\nimport DatePicker from 'react-datepicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Maininventory() {\n  _s();\n  const [inventory, setInventory] = useState(() => {\n    const storedInventory = localStorage.getItem('inventory');\n    return storedInventory ? JSON.parse(storedInventory) : [];\n  });\n  const [showAddPopup, setShowAddPopup] = useState(false);\n  const [showScanReceiptPopup, setShowScanReceiptPopup] = useState(false);\n  const [showScanProducePopup, setShowScanProducePopup] = useState(false);\n  const [showScanPackagePopup, setShowScanPackagePopup] = useState(false);\n  const [expiryPlaceholder, setExpiryPlaceholder] = useState(new Date());\n  const [newItem, setNewItem] = useState({\n    name: '',\n    amount: '',\n    spent: '',\n    expiryDate: '',\n    status: ''\n  });\n  const [msg, setMsg] = useState('');\n  const [name, setName] = useState('');\n  const [file, setFile] = useState(null);\n  const [imgSrc, setImgSrc] = useState('');\n  const [extractedText, setExtractedText] = useState('');\n  const [msg1, setMsg1] = useState('');\n  const [file1, setFile1] = useState(null);\n  const [imgSrc1, setImgSrc1] = useState('');\n  const [extractedText1, setExtractedText1] = useState('');\n  const [msg2, setMsg2] = useState('');\n  const [file2, setFile2] = useState(null);\n  const [imgSrc2, setImgSrc2] = useState('');\n  const [extractedText2, setExtractedText2] = useState('');\n  // const webcamRef = useRef(null);\n\n  // Define handleEditItem function\n  const handleEditItem = (id, updatedItem) => {\n    // Find the item in the inventory array and update it\n    const updatedInventory = inventory.map(item => {\n      if (item.id === id) {\n        return updatedItem;\n      }\n      return item;\n    });\n    setInventory(updatedInventory);\n  };\n\n  // Define handleDeleteItem function\n  const handleDeleteItem = id => {\n    // Filter out the item with the specified id from the inventory array\n    const updatedInventory = inventory.filter(item => item.id !== id);\n    setInventory(updatedInventory);\n  };\n  useEffect(() => {\n    const storedInventory = localStorage.getItem('inventory');\n    if (storedInventory) {\n      setInventory(JSON.parse(storedInventory));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('inventory', JSON.stringify(inventory));\n    console.log(\"Inventory saved to local storage:\", inventory);\n  }, [inventory]);\n\n  // useEffect(() => {\n  //   // Check expiry dates against current date\n  //   const updatedInventory = inventory.map(item => {\n  //     // Split the date string and rearrange it to \"YYYY-MM-DD\" format\n  //     const parts = item.expiryDate.split('/');\n  //     const formattedDate = `${parts[2]}-${parts[1]}-${parts[0]}`;\n\n  //     const expiryDate = new Date(formattedDate);\n  //     const currentDate = new Date();\n\n  //     if (expiryDate < currentDate) {\n  //       console.log(\"Item expired:\", item.name);\n  //       return { ...item, status: 'Expired' };\n  //     } else {\n  //       console.log(\"Item not expired:\", item.name);\n  //       return { ...item, status: 'Not Expired' };\n  //     }\n  //   });\n  //   setInventory(updatedInventory);\n  // }, []);\n\n  //change this to close all\n  const togglePopup = popupType => {\n    setShowAddPopup(false);\n    setShowScanReceiptPopup(false);\n    setShowScanProducePopup(false);\n    setShowScanPackagePopup(false);\n    switch (popupType) {\n      case 'add':\n        setShowAddPopup(!showAddPopup);\n        if (showAddPopup) {\n          // If opening the \"Add Manually\" popup, set expiryPlaceholder to today's date\n          setExpiryPlaceholder(new Date());\n          // If closing the \"Add Manually\" popup, reset all fields\n          setNewItem({\n            name: '',\n            amount: '',\n            spent: '',\n            expiryDate: new Date().toLocaleDateString('en-GB', {\n              day: '2-digit',\n              month: 'short',\n              year: 'numeric'\n            }),\n            status: ''\n          });\n          // Reset the expiry date placeholder\n          //setExpiryPlaceholder(new Date()); \n        }\n\n        break;\n      case 'receipt':\n        setShowScanReceiptPopup(!showScanReceiptPopup);\n        break;\n      case 'produce':\n        setShowScanProducePopup(!showScanProducePopup);\n        break;\n      case 'package':\n        setShowScanPackagePopup(!showScanPackagePopup);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name === 'status') {\n      setNewItem(prevItem => ({\n        ...prevItem,\n        status: value\n      }));\n    } else {\n      setNewItem(prevItem => ({\n        ...prevItem,\n        [name]: value\n      }));\n    }\n  };\n  const handleAddItem = () => {\n    // Regular expression to check for special characters\n    const specialCharsRegex = /[!@#$%^&*(),.?\":{}|<>]/;\n\n    // Check if any of the required fields are empty\n    if (!newItem.name || !newItem.amount || !newItem.spent) {\n      // Display an error message or perform any other action\n      alert('Please fill in all the fields');\n      return; // Exit the function early if validation fails\n    }\n\n    // Check if any field contains special characters\n    if (specialCharsRegex.test(newItem.name) || specialCharsRegex.test(newItem.status)) {\n      alert('Please do not use special characters in the name or status field');\n      return;\n    }\n\n    // Check if the amount is a valid number\n    const amount = parseFloat(newItem.amount);\n    if (isNaN(amount) || amount <= 0) {\n      alert('Please enter a valid amount');\n      return;\n    }\n\n    // Check if the spent is a valid number\n    const spent = parseFloat(newItem.spent);\n    if (isNaN(spent) || spent <= 0) {\n      alert('Please enter a valid spent amount');\n      return;\n    }\n\n    // If expiry date is not provided, use the current date\n    let expiryDate = newItem.expiryDate;\n    if (!expiryDate) {\n      const currentDate = new Date();\n      expiryDate = currentDate.toLocaleDateString('en-GB');\n    }\n\n    // Format the spent amount with Australian dollar symbol\n    const formattedSpent = `$${parseFloat(newItem.spent).toFixed(2)}`;\n\n    // Create a new item object\n    const newInventoryItem = {\n      id: inventory.length + 1,\n      name: newItem.name,\n      amount: parseFloat(newItem.amount),\n      spent: formattedSpent,\n      expiryDate: expiryDate,\n      status: ''\n    };\n\n    // Add the new item to the inventory\n    const updatedInventory = [...inventory, newInventoryItem];\n    setInventory(updatedInventory);\n    localStorage.setItem('inventory', JSON.stringify(updatedInventory));\n\n    // Check expiry date and update status for the new item\n    const updatedInventoryWithStatus = updatedInventory.map(item => {\n      if (item.id === newInventoryItem.id) {\n        const parts = item.expiryDate.split('/');\n        const formattedDate = `${parts[2]}-${parts[1]}-${parts[0]}`;\n        const expiryDate = new Date(formattedDate);\n        const currentDate = new Date();\n        if (expiryDate < currentDate) {\n          return {\n            ...item,\n            status: 'Expired'\n          };\n        } else {\n          return {\n            ...item,\n            status: 'Not Expired'\n          };\n        }\n      }\n      return item;\n    });\n    setInventory(updatedInventoryWithStatus);\n\n    // Reset the form fields and hide the add popup\n    setNewItem({\n      name: '',\n      amount: '',\n      spent: '',\n      expiryDate: '',\n      status: ''\n    });\n    setShowAddPopup(false);\n  };\n  const populateItems = (name, amount, spent, expiryDate, status) => {\n    const newInventoryItem = {\n      id: inventory.length + 1,\n      name: name,\n      amount: amount,\n      spent: spent,\n      expiryDate: expiryDate,\n      status: status\n    };\n    setInventory([...inventory, newInventoryItem]);\n  };\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await fetch('https://rohan2121.pythonanywhere.com/', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      console.log(data);\n      setName(data.name);\n      setImgSrc(data.imgSrc);\n      setExtractedText(data.extracted_text);\n      setMsg(data.msg);\n      setNewItem(prevItem => ({\n        ...prevItem,\n        name: data.name,\n        amount: data.extracted_text,\n        spent: data.msg,\n        expiryDate: '',\n        status: ''\n      }));\n      if (extractedText !== '' || msg !== '') {\n        populateItems(data.name, data.extracted_text, data.msg, '', '');\n      }\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setMsg('Failed to upload image');\n    }\n  };\n  const handleFileChange1 = e => {\n    setFile1(e.target.files[0]);\n  };\n  const handleUpload2 = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file1', file1);\n    setShowScanReceiptPopup(false); // Close the popup\n    try {\n      const response = await fetch('https://new12222-18275757747f.herokuapp.com/pred', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      console.log(data);\n      setImgSrc1(data.imgSrc1);\n      setExtractedText1(data.extracted_text1);\n      setMsg1(data.msg1);\n      const daysToAdd = parseInt(data.msg1, 10);\n      const currentDate = new Date();\n      currentDate.setDate(currentDate.getDate() + daysToAdd);\n      const formattedDate = `${currentDate.getDate()}/${currentDate.getMonth() + 1}/${currentDate.getFullYear()}`;\n      if (extractedText1 !== '' || msg1 !== '') {\n        populateItems(data.extracted_text1, '', '', formattedDate, '');\n      }\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setMsg1('Failed to upload image');\n    }\n  };\n  const handleFileChange2 = e => {\n    setFile2(e.target.files[0]);\n  };\n  const handleUpload3 = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file2', file2);\n    try {\n      const response = await fetch('https://rohan2121.pythonanywhere.com/recpt', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      console.log(data);\n      setImgSrc2(data.imgSrc2);\n      setExtractedText2(data.extracted_text2);\n      setMsg2('Image uploaded successfully!');\n      setNewItem(prevItem => ({\n        ...prevItem,\n        name: '',\n        amount: '',\n        spent: '',\n        expiryDate: data.extracted_text2,\n        status: ''\n      }));\n      if (extractedText2 !== '' || msg2 !== '') {\n        populateItems('', '', '', data.extracted_text2, '');\n      }\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setMsg('Failed to upload image');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"applogo.png\",\n          alt: \"App Logo\",\n          style: {\n            width: '40px',\n            height: '40px',\n            marginRight: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green',\n            fontWeight: 'bold'\n          },\n          children: \"EcoEats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toolbardiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => console.log(\"Recipes clicked\"),\n          children: \"Recipes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => console.log(\"Information clicked\"),\n          children: \"Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => console.log(\"Recycling Agencies Clicked\"),\n          children: \"Recycling Agencies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => console.log(\"Check My Knowledge Clicked\"),\n          children: \"Check My Knowledge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: \"YOUR INVENTORY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InventoryList, {\n        inventory: inventory,\n        onEdit: handleEditItem,\n        onDelete: handleDeleteItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: () => togglePopup('add'),\n          children: \"Add Manually\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scan-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => togglePopup('receipt'),\n            children: \"Scan Receipt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => togglePopup('package'),\n            children: \"Scan Package\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => togglePopup('produce'),\n            children: \"Scan Fresh Produce\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), showAddPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup large-popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add New Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: newItem.name,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Amount:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"amount\",\n              value: newItem.amount,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Spent:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"spent\",\n                value: newItem.spent,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Expiry Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: expiryPlaceholder,\n              onChange: date => {\n                // Format the selected date\n                const formattedDate = date.toLocaleDateString('en-GB', {\n                  day: '2-digit',\n                  month: 'short',\n                  year: 'numeric'\n                });\n                // Set the formatted date to the expiryPlaceholder\n                setExpiryPlaceholder(date);\n                // Update the expiry date in newItem\n                setNewItem(prevItem => ({\n                  ...prevItem,\n                  expiryDate: formattedDate\n                }));\n              },\n              dateFormat: \"dd MMM yyyy\",\n              className: \"date-picker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddItem,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => togglePopup('add'),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this), showScanReceiptPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Scan Receipt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scan-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleUpload,\n              encType: \"multipart/form-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                onChange: handleFileChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this), imgSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imgSrc,\n              alt: \"Uploaded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => togglePopup('receipt'),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this), showScanPackagePopup && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Scan Package\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scan-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleUpload3,\n              encType: \"multipart/form-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file2\",\n                onChange: handleFileChange2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 17\n            }, this), imgSrc2 && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imgSrc2,\n              alt: \"Uploaded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => togglePopup('package'),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this), showScanProducePopup && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Scan Produce\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scan-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"uploadForm\",\n              onSubmit: handleUpload2,\n              encType: \"multipart/form-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file1\",\n                onChange: handleFileChange1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 17\n            }, this), imgSrc1 && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imgSrc1,\n              alt: \"Uploaded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => togglePopup('produce'),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 5\n  }, this);\n}\n_s(Maininventory, \"O1WObi3W62YlTtwFQQ518NT/7L8=\");\n_c = Maininventory;\nexport default Maininventory;\nvar _c;\n$RefreshReg$(_c, \"Maininventory\");","map":{"version":3,"names":["React","useState","useEffect","useRef","InventoryList","DatePicker","Maininventory","inventory","setInventory","storedInventory","localStorage","getItem","JSON","parse","showAddPopup","setShowAddPopup","showScanReceiptPopup","setShowScanReceiptPopup","showScanProducePopup","setShowScanProducePopup","showScanPackagePopup","setShowScanPackagePopup","expiryPlaceholder","setExpiryPlaceholder","Date","newItem","setNewItem","name","amount","spent","expiryDate","status","msg","setMsg","setName","file","setFile","imgSrc","setImgSrc","extractedText","setExtractedText","msg1","setMsg1","file1","setFile1","imgSrc1","setImgSrc1","extractedText1","setExtractedText1","msg2","setMsg2","file2","setFile2","imgSrc2","setImgSrc2","extractedText2","setExtractedText2","handleEditItem","id","updatedItem","updatedInventory","map","item","handleDeleteItem","filter","setItem","stringify","console","log","togglePopup","popupType","toLocaleDateString","day","month","year","handleInputChange","event","value","target","prevItem","handleAddItem","specialCharsRegex","alert","test","parseFloat","isNaN","currentDate","formattedSpent","toFixed","newInventoryItem","length","updatedInventoryWithStatus","parts","split","formattedDate","populateItems","handleFileChange","e","files","handleUpload","preventDefault","formData","FormData","append","response","fetch","method","body","data","json","extracted_text","error","handleFileChange1","handleUpload2","extracted_text1","daysToAdd","parseInt","setDate","getDate","getMonth","getFullYear","handleFileChange2","handleUpload3","extracted_text2","display","alignItems","width","height","marginRight","color","fontWeight","date"],"sources":["C:/Users/chen/Desktop/新建文件夹/frontend/src/Pages/inventory.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport InventoryList from './components/InventoryList';\r\nimport './App.css';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nexport function Maininventory() {\r\n  const [inventory, setInventory] = useState(() => {\r\n    const storedInventory = localStorage.getItem('inventory');\r\n    return storedInventory ? JSON.parse(storedInventory) : [];\r\n  });\r\n  const [showAddPopup, setShowAddPopup] = useState(false);\r\n  const [showScanReceiptPopup, setShowScanReceiptPopup] = useState(false);\r\n  const [showScanProducePopup, setShowScanProducePopup] = useState(false);\r\n  const [showScanPackagePopup, setShowScanPackagePopup] = useState(false);\r\n  const [expiryPlaceholder, setExpiryPlaceholder] = useState(new Date());\r\n  const [newItem, setNewItem] = useState({\r\n    name: '',\r\n    amount: '',\r\n    spent: '',\r\n    expiryDate: '',\r\n    status: ''\r\n  });\r\n  const [msg, setMsg] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [file, setFile] = useState(null);\r\n  const [imgSrc, setImgSrc] = useState('');\r\n  const [extractedText, setExtractedText] = useState('');\r\n  const [msg1, setMsg1] = useState('');\r\n  const [file1, setFile1] = useState(null);\r\n  const [imgSrc1, setImgSrc1] = useState('');\r\n  const [extractedText1, setExtractedText1] = useState('');\r\n  const [msg2, setMsg2] = useState('');\r\n  const [file2, setFile2] = useState(null);\r\n  const [imgSrc2, setImgSrc2] = useState('');\r\n  const [extractedText2, setExtractedText2] = useState('');\r\n  // const webcamRef = useRef(null);\r\n\r\n  // Define handleEditItem function\r\n  const handleEditItem = (id, updatedItem) => {\r\n    // Find the item in the inventory array and update it\r\n    const updatedInventory = inventory.map(item => {\r\n      if (item.id === id) {\r\n        return updatedItem;\r\n      }\r\n      return item;\r\n    });\r\n    setInventory(updatedInventory);\r\n  };\r\n\r\n  // Define handleDeleteItem function\r\n  const handleDeleteItem = (id) => {\r\n    // Filter out the item with the specified id from the inventory array\r\n    const updatedInventory = inventory.filter(item => item.id !== id);\r\n    setInventory(updatedInventory);\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const storedInventory = localStorage.getItem('inventory');\r\n    if (storedInventory) {\r\n      setInventory(JSON.parse(storedInventory));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('inventory', JSON.stringify(inventory));\r\n    console.log(\"Inventory saved to local storage:\", inventory);\r\n  }, [inventory]);\r\n\r\n\r\n  // useEffect(() => {\r\n  //   // Check expiry dates against current date\r\n  //   const updatedInventory = inventory.map(item => {\r\n  //     // Split the date string and rearrange it to \"YYYY-MM-DD\" format\r\n  //     const parts = item.expiryDate.split('/');\r\n  //     const formattedDate = `${parts[2]}-${parts[1]}-${parts[0]}`;\r\n\r\n  //     const expiryDate = new Date(formattedDate);\r\n  //     const currentDate = new Date();\r\n\r\n  //     if (expiryDate < currentDate) {\r\n  //       console.log(\"Item expired:\", item.name);\r\n  //       return { ...item, status: 'Expired' };\r\n  //     } else {\r\n  //       console.log(\"Item not expired:\", item.name);\r\n  //       return { ...item, status: 'Not Expired' };\r\n  //     }\r\n  //   });\r\n  //   setInventory(updatedInventory);\r\n  // }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //change this to close all\r\n  const togglePopup = (popupType) => {\r\n    setShowAddPopup(false);\r\n    setShowScanReceiptPopup(false);\r\n    setShowScanProducePopup(false);\r\n    setShowScanPackagePopup(false);\r\n\r\n    switch (popupType) {\r\n      case 'add':\r\n        setShowAddPopup(!showAddPopup);\r\n        if (showAddPopup) {\r\n          // If opening the \"Add Manually\" popup, set expiryPlaceholder to today's date\r\n          setExpiryPlaceholder(new Date());\r\n          // If closing the \"Add Manually\" popup, reset all fields\r\n          setNewItem({\r\n            name: '',\r\n            amount: '',\r\n            spent: '',\r\n            expiryDate: new Date().toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: 'numeric' }),\r\n            status: ''\r\n          });\r\n          // Reset the expiry date placeholder\r\n          //setExpiryPlaceholder(new Date()); \r\n        }\r\n        break;\r\n      case 'receipt':\r\n        setShowScanReceiptPopup(!showScanReceiptPopup);\r\n        break;\r\n      case 'produce':\r\n        setShowScanProducePopup(!showScanProducePopup);\r\n        break;\r\n      case 'package':\r\n        setShowScanPackagePopup(!showScanPackagePopup);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'status') {\r\n      setNewItem((prevItem) => ({\r\n        ...prevItem,\r\n        status: value\r\n      }));\r\n    } else {\r\n      setNewItem((prevItem) => ({\r\n        ...prevItem,\r\n        [name]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n\r\n  const handleAddItem = () => {\r\n    // Regular expression to check for special characters\r\n    const specialCharsRegex = /[!@#$%^&*(),.?\":{}|<>]/;\r\n\r\n    // Check if any of the required fields are empty\r\n    if (!newItem.name || !newItem.amount || !newItem.spent) {\r\n      // Display an error message or perform any other action\r\n      alert('Please fill in all the fields');\r\n      return; // Exit the function early if validation fails\r\n    }\r\n\r\n    // Check if any field contains special characters\r\n    if (specialCharsRegex.test(newItem.name) || specialCharsRegex.test(newItem.status)) {\r\n      alert('Please do not use special characters in the name or status field');\r\n      return;\r\n    }\r\n\r\n    // Check if the amount is a valid number\r\n    const amount = parseFloat(newItem.amount);\r\n    if (isNaN(amount) || amount <= 0) {\r\n      alert('Please enter a valid amount');\r\n      return;\r\n    }\r\n\r\n    // Check if the spent is a valid number\r\n    const spent = parseFloat(newItem.spent);\r\n    if (isNaN(spent) || spent <= 0) {\r\n      alert('Please enter a valid spent amount');\r\n      return;\r\n    }\r\n\r\n    // If expiry date is not provided, use the current date\r\n    let expiryDate = newItem.expiryDate;\r\n    if (!expiryDate) {\r\n      const currentDate = new Date();\r\n      expiryDate = currentDate.toLocaleDateString('en-GB');\r\n    }\r\n\r\n    // Format the spent amount with Australian dollar symbol\r\n    const formattedSpent = `$${parseFloat(newItem.spent).toFixed(2)}`;\r\n\r\n    // Create a new item object\r\n    const newInventoryItem = {\r\n      id: inventory.length + 1,\r\n      name: newItem.name,\r\n      amount: parseFloat(newItem.amount),\r\n      spent: formattedSpent,\r\n      expiryDate: expiryDate,\r\n      status: ''\r\n    };\r\n\r\n    // Add the new item to the inventory\r\n    const updatedInventory = [...inventory, newInventoryItem];\r\n\r\n\r\n    setInventory(updatedInventory);\r\n    localStorage.setItem('inventory', JSON.stringify(updatedInventory));\r\n\r\n    // Check expiry date and update status for the new item\r\n    const updatedInventoryWithStatus = updatedInventory.map(item => {\r\n      if (item.id === newInventoryItem.id) {\r\n        const parts = item.expiryDate.split('/');\r\n        const formattedDate = `${parts[2]}-${parts[1]}-${parts[0]}`;\r\n        const expiryDate = new Date(formattedDate);\r\n        const currentDate = new Date();\r\n\r\n        if (expiryDate < currentDate) {\r\n          return { ...item, status: 'Expired' };\r\n        } else {\r\n          return { ...item, status: 'Not Expired' };\r\n        }\r\n      }\r\n      return item;\r\n    });\r\n\r\n    setInventory(updatedInventoryWithStatus);\r\n\r\n    // Reset the form fields and hide the add popup\r\n    setNewItem({\r\n      name: '',\r\n      amount: '',\r\n      spent: '',\r\n      expiryDate: '',\r\n      status: ''\r\n    });\r\n    setShowAddPopup(false);\r\n  };\r\n\r\n  const populateItems = (name, amount, spent, expiryDate, status) => {\r\n    const newInventoryItem = {\r\n      id: inventory.length + 1,\r\n      name: name,\r\n      amount: amount,\r\n      spent: spent,\r\n      expiryDate: expiryDate,\r\n      status: status\r\n    };\r\n    setInventory([...inventory, newInventoryItem]);\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const response = await fetch('https://rohan2121.pythonanywhere.com/', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      const data = await response.json();\r\n      console.log(data);\r\n      setName(data.name);\r\n      setImgSrc(data.imgSrc);\r\n      setExtractedText(data.extracted_text);\r\n      setMsg(data.msg);\r\n      setNewItem(prevItem => ({\r\n        ...prevItem,\r\n        name: data.name,\r\n        amount: data.extracted_text,\r\n        spent: data.msg,\r\n        expiryDate: '',\r\n        status: ''\r\n      }));\r\n      if (extractedText !== '' || msg !== '') {\r\n        populateItems(data.name, data.extracted_text, data.msg, '', '');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading image:', error);\r\n      setMsg('Failed to upload image');\r\n    }\r\n  };\r\n\r\n  const handleFileChange1 = (e) => {\r\n    setFile1(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload2 = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('file1', file1);\r\n    setShowScanReceiptPopup(false); // Close the popup\r\n    try {\r\n      const response = await fetch('https://new12222-18275757747f.herokuapp.com/pred', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      const data = await response.json();\r\n      console.log(data);\r\n      setImgSrc1(data.imgSrc1);\r\n      setExtractedText1(data.extracted_text1);\r\n      setMsg1(data.msg1);\r\n      const daysToAdd = parseInt(data.msg1, 10);\r\n      const currentDate = new Date();\r\n      currentDate.setDate(currentDate.getDate() + daysToAdd);\r\n      const formattedDate = `${currentDate.getDate()}/${currentDate.getMonth() + 1}/${currentDate.getFullYear()}`;\r\n      if (extractedText1 !== '' || msg1 !== '') {\r\n        populateItems(data.extracted_text1, '', '', formattedDate, '');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading image:', error);\r\n      setMsg1('Failed to upload image');\r\n    }\r\n  };\r\n\r\n  const handleFileChange2 = (e) => {\r\n    setFile2(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload3 = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('file2', file2);\r\n\r\n    try {\r\n      const response = await fetch('https://rohan2121.pythonanywhere.com/recpt', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      const data = await response.json();\r\n      console.log(data);\r\n      setImgSrc2(data.imgSrc2);\r\n      setExtractedText2(data.extracted_text2);\r\n      setMsg2('Image uploaded successfully!');\r\n      setNewItem(prevItem => ({\r\n        ...prevItem,\r\n        name: '',\r\n        amount: '',\r\n        spent: '',\r\n        expiryDate: data.extracted_text2,\r\n        status: ''\r\n      }));\r\n      if (extractedText2 !== '' || msg2 !== '') {\r\n        populateItems('', '', '', data.extracted_text2, '');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading image:', error);\r\n      setMsg('Failed to upload image');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"toolbar\">\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <img src=\"applogo.png\" alt=\"App Logo\" style={{ width: '40px', height: '40px', marginRight: '10px' }} />\r\n          <span style={{ color: 'green', fontWeight: 'bold' }}>EcoEats</span>\r\n        </div>\r\n        <div className=\"toolbardiv\">\r\n          <button onClick={() => console.log(\"Recipes clicked\")}>Recipes</button>\r\n          <button onClick={() => console.log(\"Information clicked\")}>Information</button>\r\n          <button onClick={() => console.log(\"Recycling Agencies Clicked\")}>Recycling Agencies</button>\r\n          <button onClick={() => console.log(\"Check My Knowledge Clicked\")}>Check My Knowledge</button>\r\n        </div>\r\n        <div></div>\r\n      </div>\r\n      <div className=\"App\">\r\n\r\n        <header>YOUR INVENTORY</header>\r\n        <InventoryList\r\n          inventory={inventory}\r\n          onEdit={handleEditItem}\r\n          onDelete={handleDeleteItem}\r\n        />\r\n        <div className=\"actions\">\r\n          <button className=\"add-button\" onClick={() => togglePopup('add')}>Add Manually</button>\r\n          <div className=\"scan-buttons\">\r\n            <button onClick={() => togglePopup('receipt')}>Scan Receipt</button>\r\n            <button onClick={() => togglePopup('package')}>Scan Package</button>\r\n            <button onClick={() => togglePopup('produce')}>Scan Fresh Produce</button>\r\n          </div>\r\n\r\n          {/* Add Popup */}\r\n          {showAddPopup && (\r\n            <div className=\"popup large-popup\">\r\n              <h2>Add New Item</h2>\r\n              <div className=\"form-group\">\r\n                <label>Name:</label>\r\n                <input type=\"text\" name=\"name\" value={newItem.name} onChange={handleInputChange} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Amount:</label>\r\n                <input type=\"text\" name=\"amount\" value={newItem.amount} onChange={handleInputChange} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"form-group\">\r\n                  <label>Spent:</label>\r\n                  <input type=\"text\" name=\"spent\" value={newItem.spent} onChange={handleInputChange} />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Expiry Date:</label>\r\n                <DatePicker\r\n                  selected={expiryPlaceholder}\r\n                  onChange={(date) => {\r\n                    // Format the selected date\r\n                    const formattedDate = date.toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: 'numeric' });\r\n                    // Set the formatted date to the expiryPlaceholder\r\n                    setExpiryPlaceholder(date);\r\n                    // Update the expiry date in newItem\r\n                    setNewItem(prevItem => ({ ...prevItem, expiryDate: formattedDate }));\r\n                  }}\r\n                  dateFormat=\"dd MMM yyyy\"\r\n                  className=\"date-picker\"\r\n                />\r\n              </div>\r\n\r\n\r\n\r\n              <div className=\"form-actions\">\r\n                <button onClick={handleAddItem}>Save</button>\r\n                <button onClick={() => togglePopup('add')}>Cancel</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Scan Receipt Popup */}\r\n          {showScanReceiptPopup && (\r\n            <div className=\"popup\">\r\n              <h2>Scan Receipt</h2>\r\n              <div className=\"scan-options\">\r\n                <form onSubmit={handleUpload} encType=\"multipart/form-data\">\r\n                  <input type=\"file\" name=\"file\" onChange={handleFileChange} />\r\n                  <input type=\"submit\" value=\"Upload\" />\r\n                </form>\r\n                {imgSrc && <img src={imgSrc} alt=\"Uploaded\" />}\r\n              </div>\r\n              <button onClick={() => togglePopup('receipt')}>Cancel</button>\r\n            </div>\r\n          )}\r\n\r\n          {/* Scan Package Popup */}\r\n          {showScanPackagePopup && (\r\n            <div className=\"popup\">\r\n              <h2>Scan Package</h2>\r\n              <div className=\"scan-options\">\r\n                <form onSubmit={handleUpload3} encType=\"multipart/form-data\">\r\n                  <input type=\"file\" name=\"file2\" onChange={handleFileChange2} />\r\n                  <input type=\"submit\" value=\"Upload\" />\r\n                </form>\r\n                {imgSrc2 && <img src={imgSrc2} alt=\"Uploaded\" />}\r\n              </div>\r\n              <button onClick={() => togglePopup('package')}>Cancel</button>\r\n            </div>\r\n          )}\r\n\r\n          {/* Scan Fresh Produce Popup */}\r\n          {showScanProducePopup && (\r\n            <div className=\"popup\">\r\n              <h2>Scan Produce</h2>\r\n\r\n              <div className=\"scan-options\">\r\n                <form id=\"uploadForm\" onSubmit={handleUpload2} encType=\"multipart/form-data\">\r\n                  <input type=\"file\" name=\"file1\" onChange={handleFileChange1} />\r\n                  <input type=\"submit\" value=\"Upload\" />\r\n                </form>\r\n                {imgSrc1 && <img src={imgSrc1} alt=\"Uploaded\" />}\r\n                {/* populateItems(extractedText1, '', '', msg1, ''); */}\r\n              </div>\r\n              {/* <button onClick={() => {\r\n              document.getElementById(\"uploadForm\").submit();\r\n              populateItems(extractedText1, '', '', msg1, '');\r\n              }}>Upload</button> */}\r\n              <button onClick={() => togglePopup('produce')}>Cancel</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Maininventory;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
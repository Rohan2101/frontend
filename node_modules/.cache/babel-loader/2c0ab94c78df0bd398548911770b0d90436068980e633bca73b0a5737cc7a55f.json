{"ast":null,"code":"var _jsxFileName = \"/Users/rajeevsingh/Desktop/React-Landing-Page-Template/src/Pages/inventory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport InventoryList from './components/InventoryList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Maininventory() {\n  _s();\n  const [inventory, setInventory] = useState(() => {\n    const storedInventory = localStorage.getItem('inventory');\n    return storedInventory ? JSON.parse(storedInventory) : [{\n      id: 1,\n      name: 'Apple',\n      amount: 2,\n      spent: '$2',\n      expiryDate: '15 Apr 2024',\n      status: 'Not Expired'\n    }\n    // Add other initial items here\n    ];\n  });\n\n  const [showAddPopup, setShowAddPopup] = useState(false);\n  const [showScanReceiptPopup, setShowScanReceiptPopup] = useState(false);\n  const [showScanProducePopup, setShowScanProducePopup] = useState(false);\n  const [showScanPackagePopup, setShowScanPackagePopup] = useState(false);\n  const [newItem, setNewItem] = useState({\n    name: '',\n    amount: 0,\n    spent: '',\n    expiryDate: '',\n    status: ''\n  });\n  const [msg, setMsg] = useState('');\n  const [name, setName] = useState('');\n  const [file, setFile] = useState(null);\n  const [imgSrc, setImgSrc] = useState('');\n  const [extractedText, setExtractedText] = useState('');\n  const [msg1, setMsg1] = useState('');\n  const [file1, setFile1] = useState(null);\n  const [imgSrc1, setImgSrc1] = useState('');\n  const [extractedText1, setExtractedText1] = useState('');\n  const [msg2, setMsg2] = useState('');\n  const [file2, setFile2] = useState(null);\n  const [imgSrc2, setImgSrc2] = useState('');\n  const [extractedText2, setExtractedText2] = useState('');\n  // const webcamRef = useRef(null);\n\n  // Define handleEditItem function\n  const handleEditItem = (id, updatedItem) => {\n    // Find the item in the inventory array and update it\n    const updatedInventory = inventory.map(item => {\n      if (item.id === id) {\n        return updatedItem;\n      }\n      return item;\n    });\n    setInventory(updatedInventory);\n  };\n\n  // Define handleDeleteItem function\n  const handleDeleteItem = id => {\n    // Filter out the item with the specified id from the inventory array\n    const updatedInventory = inventory.filter(item => item.id !== id);\n    setInventory(updatedInventory);\n  };\n  useEffect(() => {\n    const storedInventory = localStorage.getItem('inventory');\n    if (storedInventory) {\n      setInventory(JSON.parse(storedInventory));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('inventory', JSON.stringify(inventory));\n    console.log(\"Inventory saved to local storage:\", inventory);\n  }, [inventory]);\n  const togglePopup = popupType => {\n    switch (popupType) {\n      case 'add':\n        setShowAddPopup(!showAddPopup);\n        break;\n      case 'receipt':\n        setShowScanReceiptPopup(!showScanReceiptPopup);\n        break;\n      case 'produce':\n        setShowScanProducePopup(!showScanProducePopup);\n        break;\n      case 'package':\n        setShowScanPackagePopup(!showScanPackagePopup);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setNewItem({\n      ...newItem,\n      [name]: value\n    });\n  };\n  const handleAddItem = () => {\n    // Regular expression to check for special characters\n    const specialCharsRegex = /[!@#$%^&*(),.?\":{}|<>]/;\n\n    // Check if any of the required fields are empty\n    if (!newItem.name || !newItem.amount || !newItem.spent || !newItem.expiryDate || !newItem.status) {\n      // Display an error message or perform any other action\n      alert('Please fill in all the fields');\n      return; // Exit the function early if validation fails\n    }\n\n    // Check if any field contains special characters\n    if (specialCharsRegex.test(newItem.name) || specialCharsRegex.test(newItem.status)) {\n      alert('Please do not use special characters in the name or status field');\n      return;\n    }\n\n    // Check if the amount is a valid number\n    const amount = parseFloat(newItem.amount);\n    if (isNaN(amount) || amount <= 0) {\n      alert('Please enter a valid amount');\n      return;\n    }\n\n    // Check if the spent is a valid number\n    const spent = parseFloat(newItem.spent);\n    if (isNaN(spent) || spent <= 0) {\n      alert('Please enter a valid spent amount');\n      return;\n    }\n\n    // Check if the expiry date is in the correct format (dd MMM yyyy)\n    const expiryDateRegex = /^\\d{1,2}\\s\\w{3}\\s\\d{4}$/;\n    if (!expiryDateRegex.test(newItem.expiryDate)) {\n      alert('Please enter the expiry date in the format dd MMM yyyy (e.g., 15 Apr 2024)');\n      return;\n    }\n\n    // Add the new item to the inventory\n    const newInventoryItem = {\n      id: inventory.length + 1,\n      ...newItem\n    };\n    setInventory([...inventory, newInventoryItem]);\n\n    // Reset the form fields and hide the add popup\n    setNewItem({\n      name: '',\n      amount: '',\n      spent: '',\n      expiryDate: '',\n      status: ''\n    });\n    setShowAddPopup(false);\n  };\n  const populateItems = (name, amount, spent, expiryDate, status) => {\n    const newInventoryItem = {\n      id: inventory.length + 1,\n      name: name,\n      amount: amount,\n      spent: spent,\n      expiryDate: expiryDate,\n      status: status\n    };\n    setInventory([...inventory, newInventoryItem]);\n  };\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await fetch('/', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      console.log(data);\n      setName(data.name);\n      setImgSrc(data.imgSrc);\n      setExtractedText(data.extracted_text);\n      setMsg(data.msg);\n      setNewItem(prevItem => ({\n        ...prevItem,\n        name: data.name,\n        amount: data.extracted_text,\n        spent: data.msg,\n        expiryDate: '',\n        status: ''\n      }));\n      if (extractedText !== '' || msg !== '') {\n        populateItems(data.name, data.extracted_text, data.msg, '', '');\n      }\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setMsg('Failed to upload image');\n    }\n  };\n  const handleFileChange1 = e => {\n    setFile1(e.target.files[0]);\n  };\n  const handleUpload2 = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file1', file1);\n    setShowScanReceiptPopup(false); // Close the popup\n    try {\n      const response = await fetch('/pred', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      console.log(data);\n      setImgSrc1(data.imgSrc1);\n      setExtractedText1(data.extracted_text1);\n      setMsg1(data.msg1);\n      const daysToAdd = parseInt(data.msg1, 10);\n      const currentDate = new Date();\n      currentDate.setDate(currentDate.getDate() + daysToAdd);\n      const formattedDate = `${currentDate.getDate()}/${currentDate.getMonth() + 1}/${currentDate.getFullYear()}`;\n      if (extractedText1 !== '' || msg1 !== '') {\n        populateItems(data.extracted_text1, '', '', formattedDate, '');\n      }\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setMsg1('Failed to upload image');\n    }\n  };\n  const handleFileChange2 = e => {\n    setFile2(e.target.files[0]);\n  };\n  const handleUpload3 = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file2', file2);\n    try {\n      const response = await fetch('/recpt', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      console.log(data);\n      setImgSrc2(data.imgSrc2);\n      setExtractedText2(data.extracted_text2);\n      setMsg2('Image uploaded successfully!');\n      setNewItem(prevItem => ({\n        ...prevItem,\n        name: '',\n        amount: '',\n        spent: '',\n        expiryDate: data.extracted_text2,\n        status: ''\n      }));\n      if (extractedText2 !== '' || msg2 !== '') {\n        populateItems('', '', '', data.extracted_text2, '');\n      }\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setMsg('Failed to upload image');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => console.log(\"Check your Savings clicked\"),\n        children: \"Check your Savings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => console.log(\"Recipes clicked\"),\n        children: \"Recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => console.log(\"Information clicked\"),\n        children: \"Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => console.log(\"Recycling Agencies Clicked\"),\n        children: \"Recycling Agencies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => console.log(\"Check My Knowledge Clicked\"),\n        children: \"Check My Knowledge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: \"Your Fridge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(InventoryList, {\n        inventory: inventory,\n        onEdit: handleEditItem,\n        onDelete: handleDeleteItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: () => togglePopup('add'),\n          children: \"Add Manually\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scan-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => togglePopup('receipt'),\n            children: \"Scan Receipt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => togglePopup('package'),\n            children: \"Scan Package\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => togglePopup('produce'),\n            children: \"Scan Fresh Produce\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 9\n        }, this), showAddPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup large-popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add New Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: newItem.name,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Amount:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"amount\",\n              value: newItem.amount,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Spent:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"spent\",\n                value: newItem.spent,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Expiry Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"expiryDate\",\n              value: newItem.expiryDate,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"status\",\n              value: newItem.status,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddItem,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => togglePopup('add'),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), showScanReceiptPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Scan Receipt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scan-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleUpload,\n              encType: \"multipart/form-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                onChange: handleFileChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this), imgSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imgSrc,\n              alt: \"Uploaded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => togglePopup('receipt'),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), showScanPackagePopup && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Scan Package\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scan-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleUpload3,\n              encType: \"multipart/form-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file2\",\n                onChange: handleFileChange2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this), imgSrc2 && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imgSrc2,\n              alt: \"Uploaded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => togglePopup('package'),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), showScanProducePopup && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Scan Produce\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scan-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"uploadForm\",\n              onSubmit: handleUpload2,\n              encType: \"multipart/form-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file1\",\n                onChange: handleFileChange1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this), imgSrc1 && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imgSrc1,\n              alt: \"Uploaded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => togglePopup('produce'),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 3\n  }, this);\n}\n_s(Maininventory, \"0F6j8VjGEcvaZ1aIeZBixo881Gg=\");\n_c = Maininventory;\nexport default Maininventory;\nvar _c;\n$RefreshReg$(_c, \"Maininventory\");","map":{"version":3,"names":["React","useState","useEffect","useRef","InventoryList","Maininventory","inventory","setInventory","storedInventory","localStorage","getItem","JSON","parse","id","name","amount","spent","expiryDate","status","showAddPopup","setShowAddPopup","showScanReceiptPopup","setShowScanReceiptPopup","showScanProducePopup","setShowScanProducePopup","showScanPackagePopup","setShowScanPackagePopup","newItem","setNewItem","msg","setMsg","setName","file","setFile","imgSrc","setImgSrc","extractedText","setExtractedText","msg1","setMsg1","file1","setFile1","imgSrc1","setImgSrc1","extractedText1","setExtractedText1","msg2","setMsg2","file2","setFile2","imgSrc2","setImgSrc2","extractedText2","setExtractedText2","handleEditItem","updatedItem","updatedInventory","map","item","handleDeleteItem","filter","setItem","stringify","console","log","togglePopup","popupType","handleInputChange","event","value","target","handleAddItem","specialCharsRegex","alert","test","parseFloat","isNaN","expiryDateRegex","newInventoryItem","length","populateItems","handleFileChange","e","files","handleUpload","preventDefault","formData","FormData","append","response","fetch","method","body","data","json","extracted_text","prevItem","error","handleFileChange1","handleUpload2","extracted_text1","daysToAdd","parseInt","currentDate","Date","setDate","getDate","formattedDate","getMonth","getFullYear","handleFileChange2","handleUpload3","extracted_text2"],"sources":["/Users/rajeevsingh/Desktop/React-Landing-Page-Template/src/Pages/inventory.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport InventoryList from './components/InventoryList';\nimport './App.css';\n\n\nexport function Maininventory() {\n  const [inventory, setInventory] = useState(() => {\n    const storedInventory = localStorage.getItem('inventory');\n    return storedInventory ? JSON.parse(storedInventory) : [\n      { id: 1, name: 'Apple', amount: 2, spent: '$2', expiryDate: '15 Apr 2024', status: 'Not Expired' },\n      // Add other initial items here\n    ];\n  });\n  const [showAddPopup, setShowAddPopup] = useState(false);\n  const [showScanReceiptPopup, setShowScanReceiptPopup] = useState(false);\n  const [showScanProducePopup, setShowScanProducePopup] = useState(false);\n  const [showScanPackagePopup, setShowScanPackagePopup] = useState(false);\n  const [newItem, setNewItem] = useState({\n    name: '',\n    amount: 0,\n    spent: '',\n    expiryDate: '',\n    status: ''\n  });\n  const [msg, setMsg] = useState('');\n  const [name, setName] = useState('');\n  const [file, setFile] = useState(null);\n  const [imgSrc, setImgSrc] = useState('');\n  const [extractedText, setExtractedText] = useState('');\n  const [msg1, setMsg1] = useState('');\n  const [file1, setFile1] = useState(null);\n  const [imgSrc1, setImgSrc1] = useState('');\n  const [extractedText1, setExtractedText1] = useState('');\n  const [msg2, setMsg2] = useState('');\n  const [file2, setFile2] = useState(null);\n  const [imgSrc2, setImgSrc2] = useState('');\n  const [extractedText2, setExtractedText2] = useState(''); \n  // const webcamRef = useRef(null);\n\n  // Define handleEditItem function\n  const handleEditItem = (id, updatedItem) => {\n    // Find the item in the inventory array and update it\n    const updatedInventory = inventory.map(item => {\n      if (item.id === id) {\n        return updatedItem;\n      }\n      return item;\n    });\n    setInventory(updatedInventory);\n  };\n\n  // Define handleDeleteItem function\n  const handleDeleteItem = (id) => {\n    // Filter out the item with the specified id from the inventory array\n    const updatedInventory = inventory.filter(item => item.id !== id);\n    setInventory(updatedInventory);\n  };\n\n  useEffect(() => {\n    const storedInventory = localStorage.getItem('inventory');\n    if (storedInventory) {\n      setInventory(JSON.parse(storedInventory));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('inventory', JSON.stringify(inventory));\n    console.log(\"Inventory saved to local storage:\", inventory);\n  }, [inventory]);\n\n  const togglePopup = (popupType) => {\n    switch (popupType) {\n      case 'add':\n        setShowAddPopup(!showAddPopup);\n        break;\n      case 'receipt':\n        setShowScanReceiptPopup(!showScanReceiptPopup);\n        break;\n      case 'produce':\n        setShowScanProducePopup(!showScanProducePopup);\n        break;\n      case 'package':\n        setShowScanPackagePopup(!showScanPackagePopup);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setNewItem({ ...newItem, [name]: value });\n  };\n\n  const handleAddItem = () => {\n  // Regular expression to check for special characters\n  const specialCharsRegex = /[!@#$%^&*(),.?\":{}|<>]/;\n\n  // Check if any of the required fields are empty\n  if (!newItem.name || !newItem.amount || !newItem.spent || !newItem.expiryDate || !newItem.status) {\n    // Display an error message or perform any other action\n    alert('Please fill in all the fields');\n    return; // Exit the function early if validation fails\n  }\n\n  // Check if any field contains special characters\n  if (specialCharsRegex.test(newItem.name) || specialCharsRegex.test(newItem.status)) {\n    alert('Please do not use special characters in the name or status field');\n    return;\n  }\n\n  // Check if the amount is a valid number\n  const amount = parseFloat(newItem.amount);\n  if (isNaN(amount) || amount <= 0) {\n    alert('Please enter a valid amount');\n    return;\n  }\n\n  // Check if the spent is a valid number\n  const spent = parseFloat(newItem.spent);\n  if (isNaN(spent) || spent <= 0) {\n    alert('Please enter a valid spent amount');\n    return;\n  }\n\n  // Check if the expiry date is in the correct format (dd MMM yyyy)\n  const expiryDateRegex = /^\\d{1,2}\\s\\w{3}\\s\\d{4}$/;\n  if (!expiryDateRegex.test(newItem.expiryDate)) {\n    alert('Please enter the expiry date in the format dd MMM yyyy (e.g., 15 Apr 2024)');\n    return;\n  }\n\n  // Add the new item to the inventory\n  const newInventoryItem = { id: inventory.length + 1, ...newItem };\n  setInventory([...inventory, newInventoryItem]);\n\n  // Reset the form fields and hide the add popup\n  setNewItem({\n    name: '',\n    amount: '',\n    spent: '',\n    expiryDate: '',\n    status: ''\n  });\n  setShowAddPopup(false);\n};\n\n\n\n  const populateItems = (name, amount, spent, expiryDate, status) => {\n    const newInventoryItem = {\n      id: inventory.length + 1,\n      name: name,\n      amount: amount,\n      spent: spent,\n      expiryDate: expiryDate,\n      status: status\n    };\n    setInventory([...inventory, newInventoryItem]);\n  };\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const response = await fetch('/', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      console.log(data);\n      setName(data.name);\n      setImgSrc(data.imgSrc);\n      setExtractedText(data.extracted_text);\n      setMsg(data.msg);\n      setNewItem(prevItem => ({\n        ...prevItem,\n        name: data.name,\n        amount: data.extracted_text,\n        spent: data.msg,\n        expiryDate: '',\n        status: ''\n      }));\n      if (extractedText !== '' || msg !== '') {\n        populateItems(data.name, data.extracted_text,  data.msg,'', '');\n      }\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setMsg('Failed to upload image');\n    }\n  };\n\n  const handleFileChange1 = (e) => {\n    setFile1(e.target.files[0]);\n  };\n\n  const handleUpload2 = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file1', file1);\n    setShowScanReceiptPopup(false); // Close the popup\n    try {\n      const response = await fetch('/pred', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      console.log(data);\n      setImgSrc1(data.imgSrc1);\n      setExtractedText1(data.extracted_text1);\n      setMsg1(data.msg1);\n      const daysToAdd = parseInt(data.msg1, 10);\n      const currentDate = new Date();\n      currentDate.setDate(currentDate.getDate() + daysToAdd);\n      const formattedDate = `${currentDate.getDate()}/${currentDate.getMonth() + 1}/${currentDate.getFullYear()}`;\n      if (extractedText1 !== '' || msg1 !== '') {\n        populateItems(data.extracted_text1, '', '', formattedDate, '');\n      }\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setMsg1('Failed to upload image');\n    }\n  };\n\n  const handleFileChange2 = (e) => {\n    setFile2(e.target.files[0]);\n  };\n\n  const handleUpload3 = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file2', file2);\n\n    try {\n      const response = await fetch('/recpt', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      console.log(data);\n      setImgSrc2(data.imgSrc2);\n      setExtractedText2(data.extracted_text2);\n      setMsg2('Image uploaded successfully!');\n      setNewItem(prevItem => ({\n        ...prevItem,\n        name: '',\n        amount: '',\n        spent: '',\n        expiryDate: data.extracted_text2,\n        status: ''\n      }));\n      if (extractedText2 !== '' || msg2 !== '') {\n        populateItems('', '',  '',data.extracted_text2, '');\n      }\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setMsg('Failed to upload image');\n    }\n  };\n\n  return (\n    \n  <div>\n        \n  <div className=\"toolbar\">\n        <button onClick={() => console.log(\"Check your Savings clicked\")}>Check your Savings</button>\n        <button onClick={() => console.log(\"Recipes clicked\")}>Recipes</button>\n        <button onClick={() => console.log(\"Information clicked\")}>Information</button>\n        <button onClick={() => console.log(\"Recycling Agencies Clicked\")}>Recycling Agencies</button>\n        <button onClick={() => console.log(\"Check My Knowledge Clicked\")}>Check My Knowledge</button>\n      </div>\n    <div className=\"App\">\n\n      <header>Your Fridge</header>\n      <InventoryList\n        inventory={inventory}\n        onEdit={handleEditItem}\n        onDelete={handleDeleteItem}\n      />\n      <div className=\"actions\">\n        <button className=\"add-button\" onClick={() => togglePopup('add')}>Add Manually</button>\n        <div className=\"scan-buttons\">\n          <button onClick={() => togglePopup('receipt')}>Scan Receipt</button>\n          <button onClick={() => togglePopup('package')}>Scan Package</button>\n          <button onClick={() => togglePopup('produce')}>Scan Fresh Produce</button>\n        </div>\n        {/* <div>\n          {msg && <h1></h1>}\n          <form onSubmit={handleUpload} encType=\"multipart/form-data\">\n            <p>\n              {/* Remove this input */}\n              {/* <input type=\"file\" name=\"file\" onChange={handleFileChange} /> */}\n            {/* </p>\n          </form>\n          {imgSrc && <img src={imgSrc} alt=\"Uploaded\" />}\n          {extractedText ? (\n            <p>\n              <b>{extractedText}</b>\n            </p>\n          ) : (\n            <p></p>\n          )}\n        </div>\n        <div> */} \n          {/* Remove this form */}\n          {/* <form onSubmit={handleUpload2} encType=\"multipart/form-data\">\n            <p>\n              <input type=\"file\" name=\"file1\" onChange={handleFileChange1} />\n              <input type=\"submit\" value=\"Upload\" />\n            </p>\n          </form> */}\n          {/* {imgSrc1 && <img src={imgSrc1} alt=\"Uploaded\" />}\n          {extractedText1 ? (\n            <p>\n              <b>{extractedText1}</b>\n            </p>\n          ) : (\n            <p></p>\n          )}\n        </div> */}\n        {/* Add Popup */}\n        {showAddPopup && (\n          <div className=\"popup large-popup\">\n            <h2>Add New Item</h2>\n            <div className=\"form-group\">\n              <label>Name:</label>\n              <input type=\"text\" name=\"name\" value={newItem.name} onChange={handleInputChange} />\n            </div>\n            <div className=\"form-group\">\n              <label>Amount:</label>\n              <input type=\"number\" name=\"amount\" value={newItem.amount} onChange={handleInputChange} />\n            </div>\n            <div className=\"form-group\">\n            <div className=\"form-group\">\n              <label>Spent:</label>\n              <input type=\"text\" name=\"spent\" value={newItem.spent} onChange={handleInputChange} />\n            </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label>Expiry Date:</label>\n              <input type=\"text\" name=\"expiryDate\" value={newItem.expiryDate} onChange={handleInputChange} />\n            </div>\n            <div className=\"form-group\">\n              <label>Status:</label>\n              <input type=\"text\" name=\"status\" value={newItem.status} onChange={handleInputChange} />\n            </div>\n            <div className=\"form-actions\">\n              <button onClick={handleAddItem}>Save</button>\n              <button onClick={() => togglePopup('add')}>Cancel</button>\n            </div>\n          </div>\n        )}\n\n        {/* Scan Receipt Popup */}\n        {showScanReceiptPopup && (\n          <div className=\"popup\">\n            <h2>Scan Receipt</h2>\n            <div className=\"scan-options\">\n              <form onSubmit={handleUpload} encType=\"multipart/form-data\">\n                <input type=\"file\" name=\"file\" onChange={handleFileChange} />\n                <input type=\"submit\" value=\"Upload\" />\n              </form>\n              {imgSrc && <img src={imgSrc} alt=\"Uploaded\" />}\n            </div>\n            <button onClick={() => togglePopup('receipt')}>Cancel</button>\n          </div>\n        )}\n\n        {/* Scan Package Popup */}\n        {showScanPackagePopup && (\n          <div className=\"popup\">\n            <h2>Scan Package</h2>\n            <div className=\"scan-options\">\n              <form onSubmit={handleUpload3} encType=\"multipart/form-data\">\n                <input type=\"file\" name=\"file2\" onChange={handleFileChange2} />\n                <input type=\"submit\" value=\"Upload\" />\n              </form>\n              {imgSrc2 && <img src={imgSrc2} alt=\"Uploaded\" />}\n            </div>\n            <button onClick={() => togglePopup('package')}>Cancel</button>\n          </div>\n        )}\n\n        {/* Scan Fresh Produce Popup */}\n        {showScanProducePopup && (\n          <div className=\"popup\">\n            <h2>Scan Produce</h2>\n            {/* <div className=\"scan-options\">\n              <form id=\"uploadForm\" onSubmit={handleUpload2} encType=\"multipart/form-data\">\n              <p>\n              <input type=\"file\" name=\"file1\" onChange={handleFileChange1} />\n              <input type=\"submit\" value=\"Upload\" />\n              </p>\n              </form>\n              {imgSrc1 && <img src={imgSrc1} alt=\"Uploaded\" />}\n              {extractedText1 ? (\n                <p>\n                  <b>{extractedText1}</b>\n                </p>\n              ) : (\n                <p></p>\n              )}\n            </div> */}\n\n            <div className=\"scan-options\">\n              <form id=\"uploadForm\" onSubmit={handleUpload2} encType=\"multipart/form-data\">\n              <input type=\"file\" name=\"file1\" onChange={handleFileChange1} />\n              <input type=\"submit\" value=\"Upload\" />\n              </form>\n              {imgSrc1 && <img src={imgSrc1} alt=\"Uploaded\" />}\n              {/* populateItems(extractedText1, '', '', msg1, ''); */}\n             </div> \n            {/* <button onClick={() => {\n              document.getElementById(\"uploadForm\").submit();\n              populateItems(extractedText1, '', '', msg1, '');\n              }}>Upload</button> */}\n            <button onClick={() => togglePopup('produce')}>Cancel</button>\n          </div>\n        )}\n      </div>\n    </div>\n  </div>\n  );\n}\n\nexport default Maininventory;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
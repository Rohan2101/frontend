{"ast":null,"code":"var _jsxFileName = \"/Users/rajeevsingh/Desktop/untitled folder 3/EcoEats/frontend/src/Pages/components/InventoryList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InventoryList = _ref => {\n  _s();\n  let {\n    inventory,\n    onEdit,\n    onDelete\n  } = _ref;\n  const [editingItem, setEditingItem] = useState(null);\n  const [updatedValues, setUpdatedValues] = useState({});\n  const handleEdit = (id, item) => {\n    setEditingItem(id);\n    setUpdatedValues({\n      ...item\n    });\n  };\n  const handleInputChange = (e, field) => {\n    const {\n      value\n    } = e.target;\n    setUpdatedValues(prevValues => ({\n      ...prevValues,\n      [field]: value\n    }));\n  };\n  const handleDateChange = date => {\n    setUpdatedValues(prevValues => ({\n      ...prevValues,\n      expiryDate: date\n    }));\n  };\n  const handleSave = id => {\n    if (!updatedValues.name || !updatedValues.amount || !updatedValues.spent || !updatedValues.expiryDate) {\n      alert('Please fill in all the fields');\n      return;\n    }\n    const specialCharsRegex = /[!@#$%^&*(),.?\":{}|<>]/;\n    if (specialCharsRegex.test(updatedValues.name) || specialCharsRegex.test(updatedValues.status)) {\n      alert('Please do not use special characters in the name or status field');\n      return;\n    }\n    const amount = parseFloat(updatedValues.amount);\n    if (isNaN(amount) || amount <= 0) {\n      alert('Please enter a valid amount');\n      return;\n    }\n    const spent = parseFloat(updatedValues.spent);\n    if (isNaN(spent) || spent <= 0) {\n      alert('Please enter a valid spent amount');\n      return;\n    }\n\n    // Here we update the state with the new expiryDate from the DatePicker\n    onEdit(id, {\n      ...updatedValues,\n      expiryDate: updatedValues.expiryDate\n    });\n    setEditingItem(null);\n    setUpdatedValues({});\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Spent($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Expiry Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: inventory.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: editingItem === item.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: updatedValues.name,\n            onChange: e => handleInputChange(e, 'name')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this) : item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: editingItem === item.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: updatedValues.amount,\n            onChange: e => handleInputChange(e, 'amount')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this) : item.amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: editingItem === item.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: updatedValues.spent,\n            onChange: e => handleInputChange(e, 'spent')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this) : item.spent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: editingItem === item.id ? /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: updatedValues.expiryDate,\n            onChange: date => handleDateChange(date),\n            dateFormat: \"dd/MM/yyyy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this) : item.expiryDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: editingItem === item.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSave(item.id),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(item.id, item),\n              style: {\n                cursor: 'pointer',\n                marginLeft: '-7px',\n                marginRight: '10px',\n                color: 'green'\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onDelete(item.id),\n              style: {\n                cursor: 'pointer',\n                color: 'green'\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(InventoryList, \"PvsL7TN6nTyesdEwb3+Su8j3ZV8=\");\n_c = InventoryList;\nexport default InventoryList;\nvar _c;\n$RefreshReg$(_c, \"InventoryList\");","map":{"version":3,"names":["React","useState","DatePicker","InventoryList","inventory","onEdit","onDelete","editingItem","setEditingItem","updatedValues","setUpdatedValues","handleEdit","id","item","handleInputChange","e","field","value","target","prevValues","handleDateChange","date","expiryDate","handleSave","name","amount","spent","alert","specialCharsRegex","test","status","parseFloat","isNaN","map","cursor","marginLeft","marginRight","color"],"sources":["/Users/rajeevsingh/Desktop/untitled folder 3/EcoEats/frontend/src/Pages/components/InventoryList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst InventoryList = ({ inventory, onEdit, onDelete }) => {\n  const [editingItem, setEditingItem] = useState(null);\n  const [updatedValues, setUpdatedValues] = useState({});\n\n  const handleEdit = (id, item) => {\n    setEditingItem(id);\n    setUpdatedValues({ ...item });\n  };\n\n  const handleInputChange = (e, field) => {\n    const { value } = e.target;\n    setUpdatedValues(prevValues => ({\n      ...prevValues,\n      [field]: value\n    }));\n  };\n\n  const handleDateChange = (date) => {\n    setUpdatedValues(prevValues => ({\n      ...prevValues,\n      expiryDate: date\n    }));\n  };\n\n  const handleSave = (id) => {\n    if (!updatedValues.name || !updatedValues.amount || !updatedValues.spent || !updatedValues.expiryDate) {\n      alert('Please fill in all the fields');\n      return;\n    }\n\n    const specialCharsRegex = /[!@#$%^&*(),.?\":{}|<>]/;\n    if (specialCharsRegex.test(updatedValues.name) || specialCharsRegex.test(updatedValues.status)) {\n      alert('Please do not use special characters in the name or status field');\n      return;\n    }\n\n    const amount = parseFloat(updatedValues.amount);\n    if (isNaN(amount) || amount <= 0) {\n      alert('Please enter a valid amount');\n      return;\n    }\n\n    const spent = parseFloat(updatedValues.spent);\n    if (isNaN(spent) || spent <= 0) {\n      alert('Please enter a valid spent amount');\n      return;\n    }\n\n    // Here we update the state with the new expiryDate from the DatePicker\n    onEdit(id, { ...updatedValues, expiryDate: updatedValues.expiryDate });\n    setEditingItem(null);\n    setUpdatedValues({});\n  };\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Amount</th>\n          <th>Spent($)</th>\n          <th>Expiry Date</th>\n          <th>Status</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {inventory.map((item) => (\n          <tr key={item.id}>\n            <td>\n              {editingItem === item.id ? (\n                <input type=\"text\" value={updatedValues.name} onChange={(e) => handleInputChange(e, 'name')} />\n              ) : (\n                item.name\n              )}\n            </td>\n            <td>\n              {editingItem === item.id ? (\n                <input type=\"text\" value={updatedValues.amount} onChange={(e) => handleInputChange(e, 'amount')} />\n              ) : (\n                item.amount\n              )}\n            </td>\n            <td>\n              {editingItem === item.id ? (\n                <input type=\"text\" value={updatedValues.spent} onChange={(e) => handleInputChange(e, 'spent')} />\n              ) : (\n                item.spent\n              )}\n            </td>\n            <td>\n              {editingItem === item.id ? (\n                <DatePicker\n                  selected={updatedValues.expiryDate}\n                  onChange={(date) => handleDateChange(date)}\n                  dateFormat=\"dd/MM/yyyy\"\n                />\n              ) : (\n                item.expiryDate\n              )}\n            </td>\n            <td>{item.status}</td>\n            <td>\n              {editingItem === item.id ? (\n                <button onClick={() => handleSave(item.id)}>Save</button>\n              ) : (\n                <React.Fragment>\n                  <button onClick={() => handleEdit(item.id, item)} style={{ cursor: 'pointer', marginLeft: '-7px', marginRight: '10px', color: 'green' }}>Edit</button>\n                  <button onClick={() => onDelete(item.id)} style={{ cursor: 'pointer', color: 'green' }}>Delete</button>\n                </React.Fragment>\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default InventoryList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}